{
  "swagger": "2.0",
  "info": {
    "version": "0.0.0",
    "title": "Tilos Radio API"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/api",
  "tags": [
    {
      "name": "base",
      "description": "API for the base data of the radio (show/author/contribution)"
    },
    {
      "name": "mix",
      "description": "API related to the mixes"
    },
    {
      "name": "episode",
      "description": "API related to show episodes"
    },
    {
      "name": "text",
      "description": "API related to pages/news"
    },
    {
      "name": "auth",
      "description": "login/auth API"
    }
  ],
  "paths": {
    "/v1/show/{showAlias}": {
      "get": {
        "summary": "Show detailed data of a radioshow",
        "parameters": [
          {
            "$ref": "#/parameters/showAlias"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShowDetailed"
              }
            }
          }
        },
        "tags": [
          "base"
        ]
      },
      "put": {
        "summary": "create a new show",
        "tags": [
          "base"
        ]
      }
    },
    "/v1/show": {
      "get": {
        "summary": "Get all of the radioshows",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ShowSimple"
            }
          }
        },
        "tags": [
          "base"
        ]
      },
      "post": {
        "summary": "Create new radioshow",
        "tags": [
          "base"
        ]
      }
    },
    "/v1/show/{alias}/contact": {
      "post": {
        "summary": "Send an email to the authors of the show",
        "parameters": [
          {
            "$ref": "#/parameters/showAlias"
          }
        ],
        "tags": [
          "base"
        ]
      }
    },
    "/int/contribution": {
      "post": {
        "summary": "xxx",
        "tags": [
          "base"
        ]
      },
      "delete": {
        "summary": "xxx",
        "tags": [
          "base"
        ]
      }
    },
    "/v1/author": {
      "get": {
        "summary": "List all of the authors",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthorSimple"
            }
          }
        },
        "tags": [
          "base"
        ]
      },
      "post": {
        "summary": "xxx",
        "tags": [
          "base"
        ]
      }
    },
    "/v1/author/{authorAlias}": {
      "get": {
        "summary": "Retrieve details of a specific author",
        "parameters": [
          {
            "$ref": "#/parameters/authorAlias"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": {
                "$ref": "#/definitions/AuthorDetailed"
              }
            }
          }
        },
        "tags": [
          "base"
        ]
      },
      "put": {
        "summary": "Create new author",
        "tags": [
          "base"
        ]
      }
    },
    "/v1/episode/now": {
      "get": {
        "summary": "Returns the current show/episode information",
        "responses": {
          "200": {
            "schema": {
              "type": {
                "$ref": "#/definitions/EpisodeData"
              }
            }
          }
        },
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode/next": {
      "get": {
        "summary": "Show the filled episode records for shows in the next one week",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EpisodeData"
              }
            }
          }
        },
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode": {
      "get": {
        "summary": "get the episodes for a specific period",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "summary": "Start time of the given period (epoch).",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end",
            "in": "query",
            "summary": "End time of the given period (epoch).",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EpisodeData"
              }
            }
          }
        },
        "tags": [
          "episode"
        ]
      },
      "post": {
        "summary": "xxx",
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode/:id": {
      "get": {
        "summary": "Retrieve a specific episode",
        "tags": [
          "episode"
        ]
      },
      "put": {
        "summary": "Edit a specific episode",
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode/last": {
      "get": {
        "summary": "List the most recently created episode logs",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EpisodeData"
              }
            }
          }
        },
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/show/{showAlias}/episodes": {
      "get": {
        "summary": "Show episodes of a given show",
        "parameters": [
          {
            "$ref": "#/parameters/showAlias"
          }
        ],
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode/lastWeek": {
      "get": {
        "summary": "List episode logs where the show is finised on the last week.",
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/episode/:show/:year/:month/:day": {
      "get": {
        "summary": "Show all of the episodes for a give day",
        "tags": [
          "episode"
        ]
      }
    },
    "/v1/text/:type/:id": {
      "get": {
        "summary": "xxx",
        "tags": [
          "text"
        ]
      },
      "put": {
        "summary": "xxx",
        "tags": [
          "text"
        ]
      },
      "delete": {
        "summary": "xxx",
        "tags": [
          "text"
        ]
      }
    },
    "/v1/text/:type": {
      "get": {
        "summary": "xxx",
        "tags": [
          "text"
        ]
      },
      "post": {
        "summary": "xxx",
        "tags": [
          "text"
        ]
      }
    },
    "/v1/comment": {
      "get": {
        "summary": "Show a specific comment",
        "tags": [
          "comment"
        ]
      }
    },
    "/v1/:type/:id/comment": {
      "get": {
        "summary": "Show comments of a specific content type",
        "tags": [
          "comment"
        ]
      },
      "post": {
        "summary": "Create new comment for a specific content type",
        "tags": [
          "comment"
        ]
      }
    },
    "/v1/comment/:id/approve": {
      "post": {
        "summary": "Approve comment",
        "tags": [
          "comment"
        ]
      },
      "delete": {
        "summary": "Moderate comment",
        "tags": [
          "comment"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "Login to the system and get an authentication token.",
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/user/me": {
      "get": {
        "summary": "get the current user",
        "tags": [
          "auth"
        ]
      }
    },
    "/int/user": {
      "get": {
        "summary": "get information about  a user",
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "register new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/auth/password_reset": {
      "post": {
        "summary": "Request a password reset email",
        "tags": [
          "auth"
        ]
      }
    },
    "/int/oauth/facebook": {
      "post": {
        "summary": "Facebook oauth callback url"
      }
    },
    "/v1/mix/:alias": {
      "put": {
        "summary": "xxx",
        "tags": [
          "mix"
        ]
      },
      "delete": {
        "summary": "xxx",
        "tags": [
          "mix"
        ]
      }
    },
    "/v1/mix": {
      "get": {
        "summary": "xxx",
        "tags": [
          "mix"
        ]
      },
      "post": {
        "summary": "xxx",
        "tags": [
          "mix"
        ]
      }
    },
    "/v1/mix/:id": {
      "get": {
        "summary": "xxx",
        "tags": [
          "mix"
        ]
      }
    },
    "/v1/search/query": {
      "get": {
        "summary": "xxx"
      }
    },
    "/v1/tag": {
      "get": {
        "summary": "xxx"
      }
    },
    "/v1/tag/:tag": {
      "get": {
        "summary": "xxx"
      }
    },
    "/v1/m3u/lastweek": {
      "get": {
        "summary": "xxx"
      }
    },
    "/v1/status/radio": {
      "get": {
        "summary": "Show the current extra stream urls"
      }
    },
    "/v1/test/ping": {
      "get": {
        "summary": "Response with pong"
      }
    },
    "/v1/episode/:id/bookmark": {
      "post": {
        "summary": "xxx"
      }
    },
    "/v1/stat/summary": {
      "get": {
        "summary": "Summarized numbers of episodes/shows/..."
      }
    },
    "/v1/stat/listener": {
      "get": {
        "summary": "Listener statistic per month"
      }
    }
  },
  "parameters": {
    "showAlias": {
      "name": "showAlias",
      "in": "path",
      "description": "Alias (or UUID) of the specific radioshow",
      "required": true,
      "type": "string"
    },
    "authorAlias": {
      "name": "authorAlias",
      "in": "path",
      "description": "Alias (or UUID) of the specific author/artist",
      "required": true,
      "type": "string"
    }
  },
  "definitions": {
    "ShowSimple": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "MUSIC",
            "SPEECH"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "PLANNED",
            "ACTIVE",
            "OLD",
            "LEGEND"
          ]
        }
      }
    },
    "ShowReference": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "ShowDetailed": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "MUSIC",
            "SPEECH"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "PLANNED",
            "ACTIVE",
            "OLD",
            "LEGEND"
          ]
        },
        "statusTxt": {
          "type": "string"
        },
        "stats": {
          "type": "object",
          "$ref": "#/definitions/ShowStats"
        },
        "mixes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MixSimple"
          }
        },
        "contributors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ShowContribution"
          }
        },
        "schedulings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SchedulingSimple"
          }
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UrlData"
          }
        }
      }
    },
    "UrlData": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "ContributionData": {
      "properties": {
        "show": {
          "type": "object",
          "$ref": "#/definitions/WithId"
        },
        "author": {
          "type": "object",
          "$ref": "#/definitions/WithId"
        },
        "nick": {
          "type": "string"
        }
      }
    },
    "AuthorSimple": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "MixSimple": {
      "properties": {
        "id": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": [
            "DJ",
            "GUESTDJ",
            "SHOW",
            "TALE"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "MUSIC",
            "SPEECH"
          ]
        },
        "date": {
          "type": "string"
        },
        "withContent": {
          "type": "boolean"
        },
        "show": {
          "type": "object",
          "$ref": "#/definitions/ShowSimple"
        }
      }
    },
    "ShowStats": {
      "properties": {
        "mixCount": {
          "type": "integer",
          "format": "int32"
        },
        "bookmarkCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ShowContribution": {
      "properties": {
        "nick": {
          "type": "string"
        },
        "author": {
          "type": "object",
          "$ref": "#/definitions/AuthorReference"
        }
      }
    },
    "SchedulingSimple": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "weekDay": {
          "type": "integer",
          "format": "int32"
        },
        "hourFrom": {
          "type": "integer",
          "format": "int32"
        },
        "minFrom": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "validFrom": {
          "type": "integer",
          "format": "epoch"
        },
        "validTo": {
          "type": "integer",
          "format": "epoch"
        },
        "base": {
          "type": "integer",
          "format": "epoch"
        },
        "weekType": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    }
  }
}
