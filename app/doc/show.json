{
    "basePath": "http://localhost/api",
    "apiVersion": "4.0",
    "swaggerVersion": "1.2",
    "resourcePath": "/show",
    "apis": [
        {
            "path": "/show/{id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get information about a specific radio show",
                    "notes": "Get radio show based on id or slug",
                    "nickname": "getShow",
                    "responseClass": "Show",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Internal numeric id or shorname of the radio show",
                            "required": true,
                            "dataType": "string",
                            "allowMultiple": false,
                            "paramType": "path"
                        }
                    ],
                    "errorResponses": [
                        {
                            "message": "Show is not found.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "path": "/show",
            "httpMethod": "GET",
            "operations": [
                {
                    "summary": "List all of the active shows.",
                    "notes": "Show is active if there will be a scheduled episode at the current or next week.",
                    "nickname": "listShow",
                    "type": "array",
                    "items": {
                        "$ref": "Show"
                    },
                    "method": "GET",
                    "parameters": [],
                    "errorResponses": [
                    ]
                }
            ]
        },
        {
            "path": "/show/{showId}/episode/{episodeId}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get information about a specific episode of the radio show",
                    "notes": "Get episode of a specific radio show",
                    "nickname": "getEpisodeForShow",
                    "type": "array",
                    "items": {
                        "$ref": "Episode"
                    },
                    "parameters": [
                        {
                            "name": "showId",
                            "description": "Internal numeric id or shorname/slug of the radio show",
                            "required": true,
                            "dataType": "string",
                            "allowMultiple": false,
                            "paramType": "path"
                        },
                        {
                            "name": "episodeId",
                            "description": "Internal numeric id of the episode",
                            "required": true,
                            "dataType": "string",
                            "allowMultiple": false,
                            "paramType": "path"
                        }
                    ],
                    "errorResponses": [
                        {
                            "message": "Show or episode is not found.",
                            "code": 404
                        }
                    ]
                }
            ]
        },
        {
            "path": "/show/{showId}/episode",
            "operations": [
                {
                    "method": "GET",
                    "summary": "List episodes of a radio show",
                    "notes": "By default it returns with the next planned episode but it could be parameterized to list past or all planned episodes.",
                    "nickname": "listEpisodeForShow",
                    "responseClass": "Episode"
                }]
        },
        {
            "path": "/episode",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Without parameter return with the live episode. With date parameters returns with the scheduling show timetable.",
                    "nickname": "currentEpisode",
                    "type": "array",
                    "items": {
                        "$ref": "Episode"
                    },
                    "parameters": [
                        {
                            "name": "startDate",
                            "description": "Optional parameter to define the start of a specific interval (eg. a week)",
                            "dataType": "date-time",
                            "allowMultiple": false,
                            "paramType": "query"
                        },
                        {
                            "name": "endDate",
                            "description": "Optional parameter to define the end of a specific interval (eg. a week)",
                            "dataType": "date-time",
                            "allowMultiple": false,
                            "paramType": "query"
                        }
                    ]
                }]
        }

    ],
    "models": {
        "Show": {
            "id": "Show",
            "properties": {
                "id": {
                    "type": "long",
                    "required": true
                },
                "name": {
                    "type": "string",
                    "required": true
                },
                "slug": {
                    "type": "string",
                    "required": true
                },
                "description": {
                    "type": "string",
                    "required": true
                },
                "bannerUrl": {
                    "type": "string"
                },
                "authors": {
                    "type": "array",
                    "required": true,
                    "items": {
                        "$ref": "Author"
                    }
                },
                "scheduling": {
                    "type": "Scheduling",
                    "required": true
                }
            }
        },
        "Scheduling": {
            "id": "Scheduling",
            "properties": {
                "dayOfWeek": {
                    "type": "long",
                    "required": true
                },
                "startTime": {
                    "type": "string",
                    "required": true,
                    "description": "format like 10:00"
                },
                "endTime": {
                    "type": "string",
                    "required": true,
                    "description": "format like 10:00"
                },
                "week": {
                    "type": "string",
                    "required": true,
                    "description": "'odd', 'even', 'all'. Empty means all."
                }
            }
        },
        "UrlItem": {
            "id": "UrlItem",
            "properties": {
                "type": {
                    "type": "string",
                    "required": true,
                    "description": "eg. 'blog', 'facebook', 'twitter', etc."
                },
                "url": {
                    "type": "string",
                    "required": true,
                    "description": "the url"
                }
            }
        },
        "Author": {
            "id": "Author",
            "properties": {
                "id": {
                    "type": "long",
                    "required": true
                },
                "name": {
                    "type": "string",
                    "required": true
                },
                "nick": {
                    "type": "string",
                    "required": true
                },
                "iconUrl": {
                    "type": "string"
                }


            }

        },
        "Episode": {
            "id": "Episode",
            "properties": {
                "id": {
                    "type": "long",
                    "required": true
                },
                "title": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "Option text content about the planned or real content of the whole episode"
                },
                "formalStartTime": {
                    "type": "date-time",
                    "description": "the scheduled start time, eg. 2013-01-01 10:00:00",
                    "required": true
                },
                "formalEndTime": {
                    "type": "date-time",
                    "required": true
                },
                "realStartTime": {
                    "type": "date-time",
                    "description": "the real start time, eg. 2013-01-01 10:02:33"
                },
                "realEndTime": {
                    "type": "date-time"
                },
                "streamUrl": {
                    "type": "string"
                },
                "show": {
                    "type": "Show"
                }

            }

        }
    }

}
